/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Rider as PrismaRider } from "@prisma/client";

export class RiderServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.RiderCountArgs, "select">): Promise<number> {
    return this.prisma.rider.count(args);
  }

  async riders(args: Prisma.RiderFindManyArgs): Promise<PrismaRider[]> {
    return this.prisma.rider.findMany(args);
  }
  async rider(args: Prisma.RiderFindUniqueArgs): Promise<PrismaRider | null> {
    return this.prisma.rider.findUnique(args);
  }
  async createRider(args: Prisma.RiderCreateArgs): Promise<PrismaRider> {
    return this.prisma.rider.create(args);
  }
  async updateRider(args: Prisma.RiderUpdateArgs): Promise<PrismaRider> {
    return this.prisma.rider.update(args);
  }
  async deleteRider(args: Prisma.RiderDeleteArgs): Promise<PrismaRider> {
    return this.prisma.rider.delete(args);
  }
}
